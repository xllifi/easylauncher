name: Build/release

on: push

jobs:
  release:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 22

      - name: Build/release Electron app
        uses: Yan-Jobs/action-electron-builder@v1.7.0
        env:
          VITE_SENTRY_HOST: ${{ vars.VITE_SENTRY_HOST }}
          VITE_SENTRY_URL: ${{ vars.VITE_SENTRY_URL }}
          VITE_AUTH_HOST: ${{ vars.VITE_AUTH_HOST }}
          VITE_LAUNCHERMETA: ${{ vars.VITE_LAUNCHERMETA }}
          VITE_AUTOUPDATE_GITHUB_REPO: ${{ vars.VITE_AUTOUPDATE_GITHUB_REPO }}
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          windows_certs: ${{ secrets.windows_certs }}
          windows_certs_password: ${{ secrets.windows_certs_password }}

      - name: Create Appx Artifact
        uses: nanoufo/action-upload-artifacts-and-release-assets@v2
        with:
          path: dist/easylauncher*.appx
          if-no-files-found: error

      - name: Create MSI Artifact
        uses: nanoufo/action-upload-artifacts-and-release-assets@v2
        with:
          path: dist/easylauncher*.msi
          if-no-files-found: error

      - name: Create Extras Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Extras (certificate, install script)
          path: build/include/*
          if-no-files-found: error

      - name: Publish a release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        with:
          make_latest: true
          body_path: github_assets/RELEASE.md
          files: |
            dist/easylauncher*.appx
            dist/easylauncher*.msi
            build/include/*
